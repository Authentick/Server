@implements IStep

@using Gatekeeper.Client.Shared.Components.Form
@using Gatekeeper.Client.Shared.Components.Form.FormValidator

<h1>Configure custom SMTP server</h1>

<ValidatingFormWrapper FormValidityChangedCallback="FormValidityChangedCallback">
    <ValidatingInput 
        Name="Hostname"
        Placeholder="example.com"
        @bind-Value="emailSettings.Hostname"
        Required="true"
        FormValidators="new List<IFormValidator>(){new NotEmptyStringValidator()}"
    />
    <ValidatingInput 
        Name="Port"
        InputType="number"
        Placeholder="25"
        @bind-Value="emailSettings.Port"
        Required="true"
        FormValidators="new List<IFormValidator>(){new NotEmptyStringValidator(), new PortValidator()}"
    />
    <ValidatingInput 
        Name="Username"
        Placeholder="Username"
        @bind-Value="emailSettings.Username"
        Required="true"
        FormValidators="new List<IFormValidator>(){new NotEmptyStringValidator()}"
    />
    <ValidatingInput 
        Name="Password"
        Placeholder="Password"
        InputType="password"
        @bind-Value="emailSettings.Password"
        Required="true"
        FormValidators="new List<IFormValidator>(){new NotEmptyStringValidator()}"
    />
    <ValidatingInput 
        Name="Sender address"
        Placeholder="sender@example.com"
        @bind-Value="emailSettings.SenderAddress"
        Required="true"
        FormValidators="new List<IFormValidator>(){new NotEmptyStringValidator(), new EmailValidator()}"
    />
</ValidatingFormWrapper>

@code {
    [Parameter]
    public InstallStateMachine StateMachine { get; set; }
    internal EmailSettings emailSettings = new EmailSettings();

    protected override void OnInitialized()
    {
        StateMachine.SetNextStep(null);
        StateMachine.SetPreviousStep(new EmailSelectionStep());
    }

    private async Task FormValidityChangedCallback(bool valid)
    {
        if (valid)
        {
            StateMachine.SetNextStep(new AccountCreationStep());
        }
        else 
        {
            StateMachine.SetNextStep(null);    
        }
    }

    internal class EmailSettings {
        public string Hostname { get; set; } = "";
        public string Username { get; set; } = "";
        public string Password { get; set; } = "";
        public string SenderAddress { get; set; } = "";
        public string Port { get; set; } = "";
    }
}
