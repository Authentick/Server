@page "/security/alerts"
@attribute [Authorize]

@layout SecurityShell

@using Gatekeeper.Shared.ClientAndWeb.Security

@inject Gatekeeper.Shared.ClientAndWeb.Security.SecurityAlerts.SecurityAlertsClient SecurityAlertsClient

@if(_alerts != null)
{
    <h4 class="font-weight-bold">No action required</h4>
    @foreach(Alert alert in _alerts)
    {
        @switch(alert.AlertDataCase) {
            case Alert.AlertDataOneofCase.BruteforceUserAlert:
                <div class="alert-card @MapLevelToAlertCss(alert.Level) p-3 mb-4">
                    <p class="font-weight-bold">Bruteforce attempt against your account</p>
                    <p>We have identified bruteforce attempts against your account.</p>
                    <p class="font-weight-bold">Recommendation</p>
                    <p>We have automatically mitigated this issue by restricting new logins to your account.</p>
                    <div class="d-flex flex-column flex-md-row">
                        <button class="btn btn-secondary-dark btn-sm-100" @onclick="(() => DismissAlert(alert))">Dismiss alert</button>
                    </div>
                </div>
                break;
        }
    }
}

@code {
    private List<Alert>? _alerts = null;

    protected override async Task OnInitializedAsync()
    {
        AlertListReply alertListReply = await SecurityAlertsClient.ListAlertsAsync(new Google.Protobuf.WellKnownTypes.Empty());
        _alerts = alertListReply.Alerts.ToList();
    }

    private async Task DismissAlert(Alert alert)
    {
        if(_alerts != null)
        {
            _alerts.Remove(alert);
        }
        await SecurityAlertsClient.DismissAlertAsync(new DismissAlertRequest{Id = alert.Id});
    }

    private string MapLevelToAlertCss(Alert.Types.LevelEnum alertLevel)
    {
        switch(alertLevel)
        {
            case Alert.Types.LevelEnum.High:
                return "alert-card__red";
            case Alert.Types.LevelEnum.Medium:
                return "alert-card__yellow";
            case Alert.Types.LevelEnum.Low:
                return "alert-card__green";
        }
        
        throw new Exception(alertLevel  + " is not supported.");
    }
}
