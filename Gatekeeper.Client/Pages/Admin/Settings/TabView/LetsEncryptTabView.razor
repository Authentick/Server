@inject AuthServer.Shared.Admin.LetsEncrypt.LetsEncryptClient LetsEncryptClient

@if(_certificateListReply != null && _certificateListReply.Certificates.Count != 0) {
    <div class="d-flex flex-column simple-card my-4 p-4">
            <div class="d-flex flex-row font-weight-bold">
                <p class="col-6">Domain</p>
                <p class="col-6">Certificate</p>
            </div>
            @foreach(var certificate in _certificateListReply.Certificates) {
                <div class="d-flex flex-row">
                    <p class="col-6">@certificate.Domain</p>
                    <p class="col-6">@certificate.LastIssued</p>
                </div>
            }
    </div>
}

@code {
    private AuthServer.Shared.Admin.CertificateListReply? _certificateListReply;

    protected override async Task OnInitializedAsync()
    {
        _certificateListReply = await LetsEncryptClient.ListCertificatesAsync(new Google.Protobuf.WellKnownTypes.Empty{});
    }
}
