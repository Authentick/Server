syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "AuthServer.Shared";

service Install {
  rpc SetupInstance (SetupInstanceRequest) returns (SetupInstanceReply);
  rpc StartSetup (google.protobuf.Empty) returns (StartSetupReply);
  rpc CheckIsInstalled (google.protobuf.Empty) returns (CheckIsInstalledReply);
  rpc IssueTlsCertificate (IssueTlsCertificateRequest) returns (google.protobuf.Empty);
  rpc IsTlsCertificateSetup (IsTlsCertificateSetupRequest) returns (IsTlsCertificateSetupReply);
  rpc ChangeInstallToken (ChangeInstallTokenRequest) returns (ChangeInstallTokenReply);
}

message ChangeInstallTokenRequest {
  string auth_token = 1;
}

message ChangeInstallTokenReply {
  string auth_token = 1;
}

message IsTlsCertificateSetupRequest {
  string domain = 1;
  string auth_token = 2;
}

message IsTlsCertificateSetupReply {
  bool success = 1;
}

message IssueTlsCertificateRequest {
  string domain = 1;
  string contact_email = 2;
  string auth_token = 3;
}

message CheckIsInstalledReply {
  bool is_installed = 1;
}

message SetupInstanceRequest {
  SetupSmtpData smtp_settings = 1;
  SetupAccountData account_data = 2;
  string auth_token = 3;
}

message StartSetupReply {
  bool success = 1;
  google.protobuf.StringValue auth_token = 2;
}


message SetupSmtpData {
  string username = 1;
  string password = 2;
  string hostname = 3;
  string sender_address = 4;
  int32 port = 5;
}

message SetupAccountData {
  string username = 1;
  string password = 2;
  string email = 3;
}

message SetupInstanceReply {
  bool succeeded = 1;
  google.protobuf.StringValue error_message = 2;
}
