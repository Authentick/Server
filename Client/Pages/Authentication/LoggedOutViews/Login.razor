@page "/login"

@layout AuthBase

@inject AuthServer.Shared.Auth.AuthClient AuthClient
@inject NavigationManager NavigationManager

@using AuthServer.Shared

<div class="h-100 pt-0 pt-md-4">
    <h1>Welcome back!</h1>
    @if (!string.IsNullOrEmpty(_failReason))
    {
        <text>@_failReason</text>
    }
    <form class="d-flex flex-column justify-content-start h-100 col-12 col-md-8 pl-0" @onsubmit="@SubmitForm" method="post">
        <div class="pt-3">
            <input type="email" class="form-control w-100 mt-2" required name="email" @bind="@Email" placeholder="Username"/>
        </div>

        <div class="pt-3">
            <div>
                <a href="reset" class="float-right">Forgot password?</a>
            </div>
            <input type="password" class="form-control w-100 mt-2" required name="password" @bind="@Password" placeholder="Password"/>
        </div>

        <button type="submit" class="btn btn-success mt-3">Log in</button>
    </form>
</div>

@code {
    #nullable enable
    private string? Email;
    private string? Password;
    private string? _failReason;

    private async Task SubmitForm()
    {
        LoginRequest request = new LoginRequest {
            UserId = Email,
            Password = Password
        };   

        LoginReply reply = await AuthClient.LoginAsync(request);

        switch(reply.State) {
            case LoginStateEnum.Failed:
                _failReason = "Login failed.";
                break;
            case LoginStateEnum.TwoFactorRequired:
                NavigationManager.NavigateTo("/login/mfa");
                break;
            case LoginStateEnum.Success:
                NavigationManager.NavigateTo("/");
                break;
        }
    }
}
