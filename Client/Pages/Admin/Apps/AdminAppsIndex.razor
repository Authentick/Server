@page "/admin/apps"
@attribute [Authorize(Policy = "SuperAdministrator")]

@layout AdminShell

@using AuthServer.Shared.Admin

@inject AuthServer.Shared.Admin.AdminApps.AdminAppsClient AppsClient

<div class="d-flex flex-lg-row flex-column justify-content-between pb-2">
    <h2 class="text-lg">Applications</h2>
    <a href="/admin/apps/setup/" class="btn btn-secondary-dark mb-lg-0 mb-3">Add a new app</a>
</div>

@if(appsReply != null) {
    <div class="table-responsive mb-2">
        <table class="table table-hover table-bordered mb-4 table-secondary table-striped">
            <thead class="bg-secondary-dark">
                <tr>
                    <th scope="col" class="border-0">Application Name</th>
                    <th scope="col" class="border-0">Auth Type</th>
                    <th scope="col" class="border-0">Directory Type</th>
                    <th scope="col" class="border-0">Gatekeeper Proxy Enabled</th>
                    <th scope="col" class="border-0">Groups assigned</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

            @foreach(AppListEntry entry in appsReply.Apps) {
                <tr>
                    <td>@entry.Name</td>
                    <td>@entry.AuthChoice</td>
                    <td>@entry.DirectoryChoice</td>
                    <td>@entry.UsesGatekeeperProxy</td>
                    <td>@entry.GroupsAssigned</td>
                    <td><a href="/admin/apps/details/@entry.Id">Edit</a></td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}

@code {
    private AppListReply? appsReply;

    protected override async Task OnInitializedAsync()
    {
        appsReply = await AppsClient.ListAppsAsync(new Google.Protobuf.WellKnownTypes.Empty());
    }
}