@using AuthServer.Shared.Admin

@inject AuthServer.Shared.Admin.AdminApps.AdminAppsClient AppsClient

@if (TabData != null) {
    <br />
    <div class="form-group col-12 col-md-6 p-0">
        <input type="text" @bind="@TabData.Name" class="form-control bg-secondary" placeholder="Name" />
    </div>

    <div class="form-group col-12 col-md-6 p-0">
        <textarea type="text" @bind="@TabData.Description" class="form-control bg-secondary" placeholder="Description shown to users" />
    </div>

    @if (@TabData.Url != null) {
        <div class="form-group col-12 col-md-6 p-0">
            <input type="text" @bind="@TabData.Url" class="form-control bg-secondary" placeholder="URL shown to users" />
        </div>
    }

    <AuthServer.Client.Shared.Components.Button.SavingButton
        ButtonClickedCallback="@SaveButtonClicked"
        Configuration="_saveButtonConfiguration" />
}

@code {
    [Parameter]
    public AppInfoTabData? TabData { get; set;}

    [Parameter]
    public EventCallback<AppInfoTabData?> TabDataChangedCallBack { get; set; }

    private AuthServer.Client.Shared.Components.Button.SavingButton.ButtonConfiguration _saveButtonConfiguration = new Shared.Components.Button.SavingButton.ButtonConfiguration();

    public class AppInfoTabData
    {
        public string AppId { get; set; }
        public string? Name { get; set;}
        public string? Description { get; set; }
        public string? Url { get; set; }
    }

    private async Task SaveButtonClicked() 
    {
        _saveButtonConfiguration.State = Shared.Components.Button.SavingButton.ButtonStateEnum.Processing;
        SaveAppInformationRequest request = new SaveAppInformationRequest {
            AppId = TabData.AppId,
            Description = TabData.Description,
            Name = TabData.Name,
            Url = TabData.Url,
        };
        
        await AppsClient.SaveAppInformationAsync(request);
        _saveButtonConfiguration.State = Shared.Components.Button.SavingButton.ButtonStateEnum.Finished;
        await TabDataChangedCallBack.InvokeAsync(TabData);
        await Task.Delay(1000);
        _saveButtonConfiguration.State = Shared.Components.Button.SavingButton.ButtonStateEnum.Default;
    }
}
