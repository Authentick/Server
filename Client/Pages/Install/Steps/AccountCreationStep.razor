@implements IStep

@using AuthServer.Client.Shared.Components.Form
@using AuthServer.Client.Shared.Components.Form.FormValidator

@inject AuthServer.Shared.Auth.AuthClient AuthClient

<h1>Create your first account</h1>

<ValidatingFormWrapper FormValidityChangedCallback="FormValidityChangedCallback">
    <ValidatingInput 
        Name="Username"
        Placeholder="Username"
        @bind-Value="userAccount.Username"
        Required="true"
        FormValidators="new List<IFormValidator>(){new NotEmptyStringValidator()}"
    />
    <ValidatingInput 
        Name="Email"
        InputType="email"
        Placeholder="Email"
        @bind-Value="userAccount.Email"
        Required="true"
        FormValidators="new List<IFormValidator>(){new NotEmptyStringValidator(), new EmailValidator()}"
    />
    <ValidatingInput 
        Name="Password"
        InputType="password"
        Placeholder="Password"
        @bind-Value="userAccount.Password"
        Required="true"
        FormValidators="new List<IFormValidator>(){new NotEmptyStringValidator(), new PasswordPolicyValidator(AuthClient)}"
    />
</ValidatingFormWrapper>

@code {
    [Parameter]
    public InstallStateMachine StateMachine { get; set; }
    internal UserAccount userAccount = new UserAccount();

    protected override void OnInitialized()
    {
        StateMachine.SetNextStep(null);
        StateMachine.SetPreviousStep(new EmailCustomSettingsStep());
    }

    private async Task FormValidityChangedCallback(bool valid)
    {
        if (valid)
        {
            // Note: This is a hack around the fact that the next button will only available
            // if a next step is set. See InstallIndex.razor for reference.
            StateMachine.SetNextStep(new InitialSetupStep());
        }
        else
        {
            StateMachine.SetNextStep(null);
        } 
    }

    internal class UserAccount {
        public string Username { get; set; } = "";
        public string Password { get; set; } = "";
        public string Email { get; set; } = "";
    }
}
